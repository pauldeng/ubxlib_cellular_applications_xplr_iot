#!/bin/bash
# Copyright 2022 u-blox
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and

#
# install_linux
#
# Installation script for the XPLR-IOT-1 examples in Debian Linux.
# Installs all the required packages, the nRF Connect SDK
# and the examples repository.
#

silent_com () {
  err_log=/tmp/_err_log.txt
  $@ >/dev/null 2>$err_log || cat $err_log
}

sudo echo
echo "=== Installing all the required tools and packages for XPLR-IOT-1 examples"
echo "=== This will be a lengthy process, please be patient"
echo

start_time=$SECONDS

PIP_INST="pip3 -q install --user"
APT_COM="sudo apt-get -qq -y"
ENV_DIR=$HOME/xplriot1/env
NCS_VERSION=v2.1.0

export PATH=$HOME/.local/bin:$PATH
mkdir -p $HOME/.local/bin

# Force sudo
echo "Installing packages..."
$APT_COM update
silent_com $APT_COM install \
   git wget curl libncurses5 python3-pip ninja-build gperf ccache dfu-util \
   device-tree-compiler python3-setuptools python3-wheel xz-utils file make \
   gcc gcc-multilib g++-multilib libsdl2-dev
# Latest version of CMake is required
silent_com sudo snap install cmake --classic
# newtmgr used for mcuboot serial flashing
NEWT_TAR=newtmgr.tar.gz
NEWT_FILE=$HOME/.local/bin/newtmgr
curl -s https://archive.apache.org/dist/mynewt/apache-mynewt-1.4.1/apache-mynewt-newtmgr-bin-linux-1.4.1.tgz >$NEWT_TAR
tar -O -xf $NEWT_TAR --wildcards "*newtmgr" >$NEWT_FILE
chmod +x $NEWT_FILE
rm $NEWT_TAR

$PIP_INST west

echo "Installing nRF Connect SDK..."
NCS_DIR=$ENV_DIR/ncs
mkdir -p $NCS_DIR
cd $NCS_DIR
silent_com west init -m https://github.com/nrfconnect/sdk-nrf --mr $NCS_VERSION
silent_com west update
silent_com west zephyr-export

echo "Installing additional Python requirements..."
silent_com $PIP_INST -r zephyr/scripts/requirements.txt
silent_com $PIP_INST -r nrf/scripts/requirements.txt
silent_com $PIP_INST -r bootloader/mcuboot/scripts/requirements.txt

echo "Installing Nordic command line tools..."
NRF_CMDS=/tmp/nrf_cmds.deb
wget -q \
"https://www.nordicsemi.com/-/media/Software-and-other-downloads/Desktop-software/nRF-command-line-tools/sw/Versions-10-x-x/10-15-4/nrf-command-line-tools_10.15.4_amd64.deb" \
-O $NRF_CMDS
silent_com $APT_COM install $NRF_CMDS
rm $NRF_CMDS

echo "Installing ARM compiler..."
cd ..
ARM_VER=gcc-arm-none-eabi-10-2020-q4-major
bash -c \
   "wget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/${ARM_VER}-x86_64-linux.tar.bz2 -O- | \
   bunzip2 -c | tar -x"

VSCODE_DEB=/tmp/vscode.deb
echo "Installing Visual Studio Code..."
wget -q "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64" -O $VSCODE_DEB
silent_com $APT_COM install $VSCODE_DEB >/dev/null
rm $VSCODE_DEB
silent_com code --install-extension ms-vscode.cpptools-extension-pack
silent_com code --install-extension marus25.cortex-debug
silent_com code --uninstall-extension ms-vscode.cmake-tools

if [ ! -f "`which JLinkConfig`" ]; then
  echo "Installing JLink software..."
  JLINK_DEB=/tmp/JLink_Linux_x86_64.deb
  curl -s -X POST https://www.segger.com/downloads/jlink/JLink_Linux_x86_64.deb \
       -H "Content-Type: application/x-www-form-urlencoded" \
       -d "accept_license_agreement=accepted" >$JLINK_DEB
  silent_com $APT_COM install $JLINK_DEB >/dev/null
  rm $JLINK_DEB
fi

echo "Getting the source code repositories..."
cd ..
git clone --recursive -q https://github.com/pauldeng/ubxlib_cellular_applications_xplr_iot
cd ubxlib_cellular_applications_xplr_iot
./do -n $ENV_DIR/ncs -t $ENV_DIR/$ARM_VER save

# Enable free use of usb ports
sudo usermod -a -G dialout $USER

elapsed=$(( SECONDS - start_time ))
echo "All done!"
eval "echo Elapsed time: $(date -ud "@$elapsed" +'%M min %S sec')"
echo
echo "**** Please note that the PATH has been updated."
echo "**** Log out and in again or run 'source $HOME/.profile'"
echo "**** in all command windows before starting any builds."



